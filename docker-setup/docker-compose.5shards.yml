# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  ckan_leg_config:
  ckan_leg_home:
  ckan_leg_storage:
  pg_data:

services:

  ckan:
    container_name: ckan
    build:
      context: ..
      dockerfile: docker-setup/ckan/Dockerfile
      args:
        - CKAN_SITE_URL=${CKAN_SITE_URL}
    links:
      - db
      - solr
      - redis
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_MG_WRITE_URL=mongodb://mongodb:27017
      - CKAN_DATASTORE_MG_READ_URL=mongodb://mongodb:27017
      - CKAN_DATASTORE_DATABASE=CKAN_Datastore
      - CKAN_QUERYSTORE_URL=postgresql://ckan:ckan@db/querystore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_SITE_ID=default
      - CKAN_MAX_UPLOAD_SIZE_MB=1000000
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - DATASTORE=NEW
    volumes:
      - ../:/usr/lib/ckan/venv/src/ckanext-mongodatastore
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan

  datapusher:
    container_name: datapusher
    build:
      context: .
      dockerfile: datapusher/Dockerfile
    environment:
      - MAX_CONTENT_LENGTH=1000
    ports:
      - "8800:8800"

  db:
    container_name: db
    build:
      context: postgresql
      dockerfile: Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  solr:
    container_name: solr
    build:
      context: .
      dockerfile: solr/Dockerfile
    ports:
      - "8983:8983"

  redis:
    container_name: redis
    image: redis:latest

  handle_server:
    container_name: handle_server
    image: handle_svr
    build:
      context: handle
      dockerfile: Dockerfile
    links:
      - db
    restart: always
    ports:
      - "2641:2641/udp"
      - "2641:2641/tcp"
      - "8000:8000/tcp"
    environment:
      SERVER_ADMINS: '300:TEST/ADMIN'
      SERVER_PRIVATE_KEY_PEM: "-----BEGIN PRIVATE KEY-----\r\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDvNoc+4J/rqxR5\r\niXFqt2W2qanBsrQpeXFd/yfIG07iGu1zzd77CD699+RTEUNbu3zS3ELNVF8QpmrX\r\neqQt7wVB7drA5wKvonTsQuOvYNnBhuS0UOl2lfF1J2wsKQ8mCkCL723QBTjcEkUi\r\nw/gAtaoDcSsnK+XjflWNcDaPrEaCjl0c3xdw4pAyt1316adPDOT1w96P52ki53U4\r\nje6Zfn3ZI2LSVrooHcNA/XRfgSXqa5n3aFlyrla7bIHk/kMtkBWzTWNF/wQbcqpn\r\nbkQrj3mVVyLby7hKv+J4KyNDYfIffSnDVtoegMTyflj/oocNkKM9H0y+3zSuNLdu\r\ng9zu57V/AgMBAAECggEBAOQMKdcpsYusZzKOcw93k4IWMP217cd0PT2NGFHOpt8r\r\nKKAz7ZWIALh98K+4T2zOSmuDDDRPcOmgnU6bXpVjvrFhniA0mvzxdWIfSoxRWocC\r\noFm+oTMqMyyqzpcy9XwgXfSJ5zhfIhu7VymThYS3q0LoymjnkpvUPp8+EOXbKMUg\r\nN3CDtODY1FpPgWUSUWh1wAeUgn748xbg5Fisa3UMf8Ykhg3qoInbmcOy6FyimGe6\r\na+2tv2oEKNPD+EsqoZk3azsq5uSigPplK/WBV6W3jsEEeVbOGt7LbxyLTQ/1AjNQ\r\nKsbH7adlNebvCaiOMFZnYSR0AutM3+QcebaxWnmYTQECgYEA/W5Tnui1QiCdcpXz\r\nP8GKV/vL2ohdutrqWktujPQPQWRVFikJ9tkGxcjZGdotBNq2PkDBZ+mm7ufzumgy\r\n1aNmNx4mTcPiXIziMDSJ6/vzNKDTEVsJwrtZOY9WuRjq5FjMjIB3XlsJzB/VRNML\r\nZ7VujTYzas70voLmRndYFKCAOr8CgYEA8aNOD5PpymQAYqhAMo2i5u83BIgNYWn0\r\n4XUSlJqswHTzv9BlFV7bL3YCMnMftdzdLbkviAbv14GaBHgaduQEK9EnsslPwmho\r\nis6bGAg2ciwSekTyCjlWS4VLASbG7b/L5yR1eP8WUPEgDLoI3zmd1r8v1k2iJztk\r\nNz6AzLHg9UECgYEA2EfhgUpj9k1TUUj7UTvgzvmKnbOnGiJdwjWB4TUgF9SCcOkR\r\nIeNRTlX8QX3a0bu9sB8fb4kN9/FoJXtrdrt+LifC1LcJZaauGimcUxKwGgfuWW9y\r\nQwgUO3VCs7C6Nao61uWD+biEAfpgzd22bAmAkW7iLpL0d+nKj/Sl7OSUyo0CgYEA\r\nwJ1tbyt39FYsnHgD3Ihcr3tGPv14tQsyIboh2oVFaZCQcHlc6mEXlUibTb3JLD3n\r\nrTft9J+a9g2gSSm35sexr3/lBjZEtvJlSyiQJuL9C5uoCwEEczPrXv3coQlZD1GQ\r\n5yp/3bhxAIqFAsAUrGQQNotmRYzS0jUcmJDhOMoeSUECgYEA5l/oF45oWA7en52R\r\no5MLPhyJFZ7HXVvh/7Aq19cCxZzTsx/zMqHyEMElUXWE/fxtHyQ1cyWtf3mlmsC6\r\nqyBmVy+sd7YIcmjBPPKWg/vGp9VY3EyzCCj/c3JPHjTMgdDHc1G2g1+sOYDhqvmX\r\njyoPDCUzCrxX1D3FgXj938gw5aE=\r\n-----END PRIVATE KEY-----"
      SERVER_PUBLIC_KEY_PEM: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7zaHPuCf66sUeYlxardl\r\ntqmpwbK0KXlxXf8nyBtO4hrtc83e+wg+vffkUxFDW7t80txCzVRfEKZq13qkLe8F\r\nQe3awOcCr6J07ELjr2DZwYbktFDpdpXxdSdsLCkPJgpAi+9t0AU43BJFIsP4ALWq\r\nA3ErJyvl435VjXA2j6xGgo5dHN8XcOKQMrdd9emnTwzk9cPej+dpIud1OI3umX59\r\n2SNi0la6KB3DQP10X4El6muZ92hZcq5Wu2yB5P5DLZAVs01jRf8EG3KqZ25EK495\r\nlVci28u4Sr/ieCsjQ2HyH30pw1baHoDE8n5Y/6KHDZCjPR9Mvt80rjS3boPc7ue1\r\nfwIDAQAB\r\n-----END PUBLIC KEY-----"
      STORAGE_TYPE: 'sql'
      SQL_URL: 'jdbc:postgresql://db:5432/handle'
      SQL_LOGIN: 'handle'
      SQL_PASSWD: 'passwd'
      SQL_DRIVER: 'org.postgresql.Driver'
      ALLOW_NA_ADMINS: 'no'
      SERVER_ADMIN_FULL_ACCESS: 'yes'
      TRACE_RESOLUTION: 'yes'
      TEMPLATE_NS_OVERRIDE: 'yes'

  gitlab:
    image: 'gitlab/gitlab-ee:latest'
    container_name: gitlab
    restart: always
    hostname: 'localhost'
    environment:
      GITLAB_ROOT_PASSWORD: 'gitlab_passwd'
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:8081'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - '8081:8081'
      - '2224:22'

  mdb-config:
    container_name: mdb-config
    image: mongo:4.4.0-bionic
    command: mongod --port 27017 --configsvr --replSet configserver --oplogSize 16 --bind_ip_all
    entrypoint: ["/scripts/setup-config.sh"]
    volumes:
      - ./mongodb/scripts:/scripts
  mdb-shard01:
    container_name: mdb-shard01
    image: mongo:4.4.0-bionic
    command: mongod --port 27018 --shardsvr --replSet shard01 --oplogSize 16 --bind_ip_all --wiredTigerCacheSizeGB 5
    entrypoint: ["/scripts/setup-shard01.sh"]
    volumes:
      - ./mongodb/scripts:/scripts
  mdb-shard02:
    container_name: mdb-shard02
    image: mongo:4.4.0-bionic
    command: mongod --port 27019 --shardsvr --replSet shard02 --oplogSize 16 --bind_ip_all --wiredTigerCacheSizeGB 5
    entrypoint: ["/scripts/setup-shard02.sh"]
    volumes:
      - ./mongodb/scripts:/scripts
  mdb-shard03:
    container_name: mdb-shard03
    image: mongo:4.4.0-bionic
    command: mongod --port 27020 --shardsvr --replSet shard03 --oplogSize 16 --bind_ip_all --wiredTigerCacheSizeGB 5
    entrypoint: ["/scripts/setup-shard03.sh"]
    volumes:
      - ./mongodb/scripts:/scripts
  mdb-shard04:
    container_name: mdb-shard04
    image: mongo:4.4.0-bionic
    command: mongod --port 27021 --shardsvr --replSet shard04 --oplogSize 16 --bind_ip_all --wiredTigerCacheSizeGB 5
    entrypoint: ["/scripts/setup-shard04.sh"]
    volumes:
      - ./mongodb/scripts:/scripts

  mdb-shard05:
    container_name: mdb-shard05
    image: mongo:4.4.0-bionic
    command: mongod --port 27022 --shardsvr --replSet shard05 --oplogSize 16 --bind_ip_all --wiredTigerCacheSizeGB 5
    entrypoint: ["/scripts/setup-shard05.sh"]
    volumes:
      - ./mongodb/scripts:/scripts

  mongodb:
    container_name: mongodb
    image: mongo:4.4.0-bionic
    command: mongos --port 27017 --configdb configserver/mdb-config:27017 --bind_ip_all
    entrypoint: ["/scripts/setup-router5shards.sh"]
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/scripts:/scripts
    depends_on:
      - mdb-config
      - mdb-shard01
      - mdb-shard02
      - mdb-shard03
      - mdb-shard04
      - mdb-shard05
